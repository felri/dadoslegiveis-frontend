/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import { useGLTF, useTexture } from "@react-three/drei";
import { useCylinder, usePlane, useBox } from "@react-three/cannon";
import { useMemo, useRef } from "react";
import { Geometry } from "three-stdlib";

const CannonGeometry = () => {
  const argsBox: [number, number, number] = [12, 1.6, 4]
  const argsCylinder: [number, number, number] = [2, 1, 2]
  const [ref1] = useBox(() => ({
    mass: 0,
    args: argsBox,
    position: [-.3, 0, .5],
  }));
  const [ref2] = useCylinder(() => ({
    mass: 0,
    args: argsCylinder,
    position: [3.25, .6, .5],
  }));;

  return (
    <>
      {/* @ts-ignore */}
      <mesh ref={ref1}>
        <boxGeometry args={argsBox}/>
        <meshBasicMaterial visible={false} />
      </mesh>
      {/* @ts-ignore */}
      <mesh ref={ref2}>
        <cylinderGeometry args={argsCylinder} />
        <meshBasicMaterial visible={false} />
      </mesh>
    </>
  );
};

function Plane () {
  const args: [number, number] = [10, 10]
  const [ref] = usePlane(() => ({
    args,
    mass: 0,
    position: [0, .15, 0],
    rotation: [-Math.PI / 2, 0, 0],
  }));

  return (
    // @ts-ignore
    <mesh ref={ref}>
      <planeGeometry args={args} />
      <meshBasicMaterial visible={false} />
    </mesh>
  );
}

export default function Model(): JSX.Element {
  // @ts-ignore
  const { nodes } = useGLTF("./congresso-v2.glb");

  const bakedTexture = useTexture("./congresso-baked.jpg");
  bakedTexture.flipY = false;
  bakedTexture.encoding = THREE.sRGBEncoding;

  const bakedMaterial = new THREE.MeshBasicMaterial({
    map: bakedTexture,
  });


  return (
    <>
      <Plane />
      <group dispose={null}>
        <CannonGeometry />
        <mesh material={bakedMaterial} geometry={nodes.Plane004.geometry} />
      </group>
    </>
  );
}
